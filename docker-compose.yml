version: '3'

networks:
  frontend:
    external: true
  backend:
    external: true

services:
  db:
    image: mariadb
    container_name: ${PREFIX}db${SUFFIX}
    # see https://dba.stackexchange.com/questions/256427/unable-to-create-tables-with-row-format-compressed
    # and https://github.com/nextcloud/server/issues/25436
    # I'm using https://techoverflow.net/2021/08/17/how-to-fix-nextcloud-4047-innodb-refuses-to-write-tables-with-row_formatcompressed-or-key_block_size/
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW --skip-innodb-read-only-compressed
    restart: unless-stopped
    volumes:
      # this is a zfs dataset with 16K recordsize
      - ${VOLS}/db:/var/lib/mysql
    networks:
      - backend
    environment:
      - MYSQL_PASSWORD=#CHANGEME
      - MYSQL_ROOT_PASSWORD=#CHANGEME
    env_file:
      - db.env

  redis:
    image: redis
    container_name: ${PREFIX}redis${SUFFIX}
    networks:
      - backend
    command: redis-server --requirepass ${REDIS_HOST_PASSWORD}
    restart: unless-stopped
    env_file:
      - redis.env

  app:
    build: ./app
    image: nc_app_img
    container_name: ${PREFIX}app${SUFFIX}
    restart: unless-stopped
    volumes:
      # local NVME for html
      - ./nc_html:/var/www/html
      # zfs dataset with 1M recordsize
      - ${VOLS}/data:/nc_data
      # place to put external workflow scripts, shared between this and cron container
      - ./scripts:/opt
      - /etc/localtime:/etc/localtime:ro
    networks:
      - frontend
      - backend
    environment:
      - MYSQL_PASSWORD=#CHANGEME
    env_file:
      - db.env
      - redis.env
      - nc.env
    depends_on:
      - db
      - redis

  notify_push:
    container_name: ${PREFIX}notify_push${SUFFIX}
    image: nc_app_img
    restart: unless-stopped
    networks:
      - frontend
      - backend
    ports:
      - 7867:7867
    environment:
      - PORT=7867
      # this is needed for... reasons.
      - NEXTCLOUD_URL=http://nc_web.frontend/
    env_file:
      - nc.env
    depends_on:
      - redis
      - app
    volumes:
      - ./nc_html:/var/www/html:ro
      - /etc/localtime:/etc/localtime:ro
    entrypoint: /var/www/html/custom_apps/notify_push/bin/x86_64/notify_push /var/www/html/config/config.php

  web:
    image: nginx:alpine
    container_name: ${PREFIX}web${SUFFIX}
    restart: unless-stopped
    environment:
      - VIRTUAL_HOST=cloud.example.tld
    user: nginx
    volumes:
      - ./web/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nc_html:/var/www/html:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - frontend
      - backend
    depends_on:
      - app

  cron:
    image: nc_app_img
    container_name: ${PREFIX}cron${SUFFIX}
    restart: unless-stopped
    # init to take care of zombies from workflow scripts
    init: true
    entrypoint: /cron.sh
    volumes:
      - ./nc_html:/var/www/html
      - ${VOLS}/data:/nc_data
      # place to put workflow scripts, shared between this and app container
      - ./scripts:/opt
    networks:
      - backend
    depends_on:
      - db
      - redis

  collabora:
    image: collabora/code:${COLLAB_TAG}
    container_name: ${PREFIX}collabora${SUFFIX}
    hostname: ${PREFIX}collabora${SUFFIX}
    restart: unless-stopped
    expose:
      - "9800"
    ports:
      - 9800:9800
    env_file:
      - collabora.env
    environment:
      # I think these are still needed because it's behind the proxy
      - extra_params=--o:ssl.enable=false --o:ssl.termination=true
      - aliasgroup1=https://cloud\.example\.tld:443 #CHANGEME
      - dictionaries="en_US es_ES de_DE"
    networks:
      - frontend
